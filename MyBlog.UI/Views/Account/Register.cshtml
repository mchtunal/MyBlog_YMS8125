@*model olarak RegisterViewModel imodel olarak tanımladık.*@
@model RegisterViewModel
@{
    ViewData["Title"] = "Kayıt Ol";
}
@*Bootstrap dan alınan bir üye ol kesitini buraya kopyalayıp türkçeleştirdik.
    asp-for ve asp-action ve asp-validation-for ları ekledik.Normalde bunların yeride id ve name leri vardı.İşimizi kolay yoldan bunlarla hallettik
        ***tag helperlar üretecekleri html elemanları kullanıldığı sayfanın modeline uygun bir şekilde bind etmekte ve hatta eşleştirilen propertynin tipine göre oluşturulacak inputun değeri otomatik belirlenmektedir.
    ***Hatta tag helperlar yazım esnasında sayfa modelinin memberlarını IntelliSense aracılığıyla karşımıza getirmektedir.
    ***Ayrıca klasik Asp.NET MVC’de ki Action ya da ActionLink helper metotlarının yerine aşağıdaki gibi “asp-action” ve “asp-controller” tag helperları gelmiştir.*@


<form asp-controller="Account" asp-action="Register" method="post">
    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" type="text" class="form-control" placeholder="E-mail">
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password"></label>
        <input asp-for="Password" type="password" class="form-control" placeholder="Parola">
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ConfirmPassword"></label>
        <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Parola Tekrar">
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-outline-primary">Giriş Yap</button>
</form>